version: "3.9"

services:
  web:
    container_name: "${COMPOSER_PROJECT_NAME}_web"
    image: "${REPOSITORY_URL}/web:role-web"
    restart: unless-stopped
    env_file:
      - ./web/.env
    volumes:
      - ./web/app.conf:/etc/nginx/conf.d/app.conf
      - ./web/.env:/app/.env
      - ./storage/app:/app/storage/app
      - ./storage/logs:/app/storage/logs
    ports:
      - "8000:80"
    networks:
      - app-network

  backend-queue:
    container_name: "${COMPOSER_PROJECT_NAME}_queue"
    image: "${REPOSITORY_URL}/queue:role-queue"
    restart: unless-stopped
    env_file:
      - ./web/.env
    environment:
      QUEUE: default
    volumes:
      - ./web/.env:/app/.env
      - ./storage/app:/app/storage/app
      - ./storage/logs:/app/storage/logs
    networks:
      - app-network
    depends_on:
      - database

  backend-scheduler:
    container_name: "${COMPOSER_PROJECT_NAME}_scheduler"
    image: "${REPOSITORY_URL}/scheduler:role-scheduler"
    restart: unless-stopped
    env_file:
      - ./web/.env
    volumes:
      - ./web/.env:/app/.env
      - ./storage/app:/app/storage/app
      - ./storage/logs:/app/storage/logs
    networks:
      - app-network
    depends_on:
      - database

  database:
    container_name: "${COMPOSER_PROJECT_NAME}_database"
    image: mariadb:latest
    restart: unless-stopped
    ports:
      - "8001:3306"
    volumes:
      - ./database:/var/lib/mysql
    environment:
      MARIADB_ROOT_PASSWORD: $DB_ROOT_PASSWORD
      MARIADB_ROOT_HOST: "%"
      MARIADB_DATABASE: $DB_DATABASE
    networks:
      - app-network

  redis:
    container_name: "${COMPOSER_PROJECT_NAME}_redis"
    image: redis:latest
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  backend-volume:
